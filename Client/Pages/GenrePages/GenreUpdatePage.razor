@page "/genrepages/genreupdatepage/{Id:int}"

@inject IGenreServices _genreServices
@inject NavigationManager _nav
@inject IJSRuntime js
<h3>GenreUpdates</h3>

<div>
    <EditForm Model="@genre" OnValidSubmit="@Updategenre">
        <DataAnnotationsValidator />
        <div>
            <div class="row">
                <div class=" col-md-6">
                    <div class="form-group">
                        <label for="genreTitle">Genre Name</label>
                        <CustomInputText form="TrackTitle" class="form-control" @bind-Value="@updateGenre.Name" />
                    </div>
                    <ValidationMessage For="@(() => updateGenre.Name)" />
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Update</button>
                    <button type="button" class="btn" style="background-color:#400444; color:white" @onclick="@(()=>Cancel(Id))">Cancel</button>
                </div>
            </div>
        </div>

    </EditForm>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    [CascadingParameter]
    public Global Global { get; set; }
    ViewGenre genre = new ViewGenre();
    string name;
    UpdateGenre updateGenre = new UpdateGenre();
    protected override async Task OnInitializedAsync()
    {
        genre = await _genreServices.GetGenreAsync(Id);
        updateGenre.Id = genre.Id;
        updateGenre.Name = genre.Name;
        name = genre.Name;
    }
    protected async void Updategenre()
    {
        var uId = genre.Id;
        var response = await _genreServices.UpdateGenreAsync(updateGenre);
        if (response)
        {
            await js.InvokeVoidAsync("updated");
            _nav.NavigateTo($"/genrepages/genreviewpage/{uId}");
        }
        else
        {
            Global.Error($"Cannot change \"{name}\" to \"{updateGenre.Name}\" as it already exist.");
        }
    }
    protected void Cancel(int id)
    {
        _nav.NavigateTo($"/genrepages/genreviewpage/{id}");
    }

}
