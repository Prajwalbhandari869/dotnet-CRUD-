@page "/genrepages/genrecreatepage"

@inject IGenreServices _genreServices
@inject NavigationManager _nav
@inject IJSRuntime js
<h3>GenreCreate</h3>
<div>
    <EditForm Model="@genreCreate" OnValidSubmit="@Create">
        <DataAnnotationsValidator />
        <div>
            <div class="row">
                <div class=" col-md-6">
                    <div class="form-group">
                        <label for="genreTitle"> Genre Title </label>
                        <CustomInputText form="genreTitle" class="form-control" @bind-Value="@genreCreate.Name" />
                    </div>
                    <ValidationMessage For="@(() => genreCreate.Name)" />
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="submit" class="btn btn-primary"> Create</button>
                    <button type="button" class="btn" style="background-color:#400444; color:white" @onclick="@Cancel">Cancel</button>
                </div>
            </div>
        </div>

    </EditForm>
    <TelerikButton OnClick="@AddNotification">Add a basic notification</TelerikButton>

    <TelerikNotification @ref="@NotificationReference" Class="MyTelerikNotification"></TelerikNotification>
</div>

@code {
    [CascadingParameter]
    public Global Global { get; set; }
    CreateGenre genreCreate = new CreateGenre();
    public TelerikNotification NotificationReference { get; set; }

    public void AddNotification()
    {
        NotificationReference.Show(new NotificationModel()
            {
                Text = "Auto Closable Notification",
                ThemeColor = ThemeConstants.Notification.ThemeColor.Primary
            });
    }

    protected async void Create()
    {
        var id = await _genreServices.CreateGenreAsync(genreCreate);
        if (id > 0)
        {
            await js.InvokeAsync<bool>("createdAlert");
            _nav.NavigateTo($"/genrepages/genreviewpage/{id}");
        }
        else
        {
            Global.Error($"Genre of name \"{genreCreate.Name}\" already exists.");
        }
    }
    protected void Cancel()
    {
        _nav.NavigateTo("/genrepages/genreviewallpage");
    }
}
<style>
    .MyTelerikNotification .k-notification-container .k-notification-wrap {
        width: 300px;
        height: 50px;
        font-size: 1.5em;
        text-align: center;
        align-items: center;
    }
</style>
