@page "/artistpages/artistupdatepage/{Id:int}"

@inject IArtistServices _artistServices
@inject IGenreServices _genreServices
@inject IAlbumServices _albumServices
@inject NavigationManager _nav
@inject IJSRuntime js
<h3>ArtistUpdate</h3>

<div>
    <EditForm Model="@artist" OnValidSubmit="@Updateartist">
        <DataAnnotationsValidator />
        <div class="row">
            <div class=" col-md-6">
                <div class="form-group">
                    <label for="artistTitle"> artist Title </label>
                    <CustomInputText form="TrackTitle" class="form-control" @bind-Value="@artistUpdate.Name" />
                </div>
                <ValidationMessage For="@(() => artistUpdate.Name)" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Update</button>
                    <button type="button" class="btn" style="background-color:#400444; color:white" @onclick="@(()=>Cancel(Id))">Cancel</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    [CascadingParameter]
    public Global Global { get; set; }
    ViewArtist artist = new ViewArtist();
    UpdateArtist artistUpdate = new UpdateArtist();
    string name;
    protected override async Task OnInitializedAsync()
    {
        artist = await _artistServices.GetArtistAsync(Id);
        artistUpdate.Id = artist.Id;
        artistUpdate.Name = artist.Name;
        name = artist.Name;
    }
    protected async void Updateartist()
    {
        var uId = artist.Id;
        var response = await _artistServices.UpdateArtistAsync(artistUpdate);
        if (response)
        {
            await js.InvokeVoidAsync("updated");
            _nav.NavigateTo($"/artistpages/artistviewpage/{uId}");
        }
        else
        {
            Global.Error($"Cannot change \"{name}\" to \"{artistUpdate.Name}\" as it already exist.");
        }
    }
    protected void Cancel(int id)
    {
        _nav.NavigateTo($"/artistpages/artistviewpage/{id}");
    }

}
