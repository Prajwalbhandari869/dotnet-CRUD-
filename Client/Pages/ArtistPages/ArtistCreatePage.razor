@page "/artistpages/artistcreatepage"
@inject IArtistServices _artistServices
@inject IJSRuntime js
@inject NavigationManager _nav

<h3>ArtistCreate</h3>
<div>
    <EditForm Model="@artistCreate" OnValidSubmit="@Create">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="artistTitle"> Artist Title </label>
                    <CustomInputText form="AlbumTitle" class="form-control" @bind-Value="@artistCreate.Name" />
                </div>
                <ValidationMessage For="@(() => artistCreate.Name)" />
            </div>
        </div>
        <br />
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Create</button>
                    <button type="button" class="btn" style="background-color:#400444; color:white" @onclick="@Cancel">Cancel</button>
                </div>
            </div>
        </div>

    </EditForm>
</div>

@code {
    CreateArtist artistCreate = new CreateArtist();
    [CascadingParameter]
    public Global Global { get; set; }

    protected async void Create()
    {
        var id = await _artistServices.CreateArtistAsync(artistCreate);
        if (id > 0)
        {
            await js.InvokeAsync<bool>("createdAlert");
            _nav.NavigateTo($"/artistpages/artistviewpage/{id}");
        }
        else
        {
            Global.Error($"Artist with name \"{artistCreate.Name}\" already exists");
        }

    }
    protected void Cancel()
    {
        _nav.NavigateTo("/artistpages/artistviewallpage");
    }
}